#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1005564015022223644) {
   out_1005564015022223644[0] = 0;
   out_1005564015022223644[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1005564015022223644[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1005564015022223644[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1005564015022223644[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1005564015022223644[5] = -sin(in_vec[1]);
   out_1005564015022223644[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1005564015022223644[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1005564015022223644[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1005564015022223644[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1005564015022223644[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1005564015022223644[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1005564015022223644[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1005564015022223644[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1005564015022223644[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1005564015022223644[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1005564015022223644[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1005564015022223644[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7139359416976386283) {
   out_7139359416976386283[0] = delta_x[0] + nom_x[0];
   out_7139359416976386283[1] = delta_x[1] + nom_x[1];
   out_7139359416976386283[2] = delta_x[2] + nom_x[2];
   out_7139359416976386283[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7139359416976386283[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7139359416976386283[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7139359416976386283[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7139359416976386283[7] = delta_x[6] + nom_x[7];
   out_7139359416976386283[8] = delta_x[7] + nom_x[8];
   out_7139359416976386283[9] = delta_x[8] + nom_x[9];
   out_7139359416976386283[10] = delta_x[9] + nom_x[10];
   out_7139359416976386283[11] = delta_x[10] + nom_x[11];
   out_7139359416976386283[12] = delta_x[11] + nom_x[12];
   out_7139359416976386283[13] = delta_x[12] + nom_x[13];
   out_7139359416976386283[14] = delta_x[13] + nom_x[14];
   out_7139359416976386283[15] = delta_x[14] + nom_x[15];
   out_7139359416976386283[16] = delta_x[15] + nom_x[16];
   out_7139359416976386283[17] = delta_x[16] + nom_x[17];
   out_7139359416976386283[18] = delta_x[17] + nom_x[18];
   out_7139359416976386283[19] = delta_x[18] + nom_x[19];
   out_7139359416976386283[20] = delta_x[19] + nom_x[20];
   out_7139359416976386283[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3528438406138962813) {
   out_3528438406138962813[0] = -nom_x[0] + true_x[0];
   out_3528438406138962813[1] = -nom_x[1] + true_x[1];
   out_3528438406138962813[2] = -nom_x[2] + true_x[2];
   out_3528438406138962813[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3528438406138962813[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3528438406138962813[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3528438406138962813[6] = -nom_x[7] + true_x[7];
   out_3528438406138962813[7] = -nom_x[8] + true_x[8];
   out_3528438406138962813[8] = -nom_x[9] + true_x[9];
   out_3528438406138962813[9] = -nom_x[10] + true_x[10];
   out_3528438406138962813[10] = -nom_x[11] + true_x[11];
   out_3528438406138962813[11] = -nom_x[12] + true_x[12];
   out_3528438406138962813[12] = -nom_x[13] + true_x[13];
   out_3528438406138962813[13] = -nom_x[14] + true_x[14];
   out_3528438406138962813[14] = -nom_x[15] + true_x[15];
   out_3528438406138962813[15] = -nom_x[16] + true_x[16];
   out_3528438406138962813[16] = -nom_x[17] + true_x[17];
   out_3528438406138962813[17] = -nom_x[18] + true_x[18];
   out_3528438406138962813[18] = -nom_x[19] + true_x[19];
   out_3528438406138962813[19] = -nom_x[20] + true_x[20];
   out_3528438406138962813[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_857020396668958774) {
   out_857020396668958774[0] = 1.0;
   out_857020396668958774[1] = 0;
   out_857020396668958774[2] = 0;
   out_857020396668958774[3] = 0;
   out_857020396668958774[4] = 0;
   out_857020396668958774[5] = 0;
   out_857020396668958774[6] = 0;
   out_857020396668958774[7] = 0;
   out_857020396668958774[8] = 0;
   out_857020396668958774[9] = 0;
   out_857020396668958774[10] = 0;
   out_857020396668958774[11] = 0;
   out_857020396668958774[12] = 0;
   out_857020396668958774[13] = 0;
   out_857020396668958774[14] = 0;
   out_857020396668958774[15] = 0;
   out_857020396668958774[16] = 0;
   out_857020396668958774[17] = 0;
   out_857020396668958774[18] = 0;
   out_857020396668958774[19] = 0;
   out_857020396668958774[20] = 0;
   out_857020396668958774[21] = 0;
   out_857020396668958774[22] = 1.0;
   out_857020396668958774[23] = 0;
   out_857020396668958774[24] = 0;
   out_857020396668958774[25] = 0;
   out_857020396668958774[26] = 0;
   out_857020396668958774[27] = 0;
   out_857020396668958774[28] = 0;
   out_857020396668958774[29] = 0;
   out_857020396668958774[30] = 0;
   out_857020396668958774[31] = 0;
   out_857020396668958774[32] = 0;
   out_857020396668958774[33] = 0;
   out_857020396668958774[34] = 0;
   out_857020396668958774[35] = 0;
   out_857020396668958774[36] = 0;
   out_857020396668958774[37] = 0;
   out_857020396668958774[38] = 0;
   out_857020396668958774[39] = 0;
   out_857020396668958774[40] = 0;
   out_857020396668958774[41] = 0;
   out_857020396668958774[42] = 0;
   out_857020396668958774[43] = 0;
   out_857020396668958774[44] = 1.0;
   out_857020396668958774[45] = 0;
   out_857020396668958774[46] = 0;
   out_857020396668958774[47] = 0;
   out_857020396668958774[48] = 0;
   out_857020396668958774[49] = 0;
   out_857020396668958774[50] = 0;
   out_857020396668958774[51] = 0;
   out_857020396668958774[52] = 0;
   out_857020396668958774[53] = 0;
   out_857020396668958774[54] = 0;
   out_857020396668958774[55] = 0;
   out_857020396668958774[56] = 0;
   out_857020396668958774[57] = 0;
   out_857020396668958774[58] = 0;
   out_857020396668958774[59] = 0;
   out_857020396668958774[60] = 0;
   out_857020396668958774[61] = 0;
   out_857020396668958774[62] = 0;
   out_857020396668958774[63] = 0;
   out_857020396668958774[64] = 0;
   out_857020396668958774[65] = 0;
   out_857020396668958774[66] = -0.5*state[4];
   out_857020396668958774[67] = -0.5*state[5];
   out_857020396668958774[68] = -0.5*state[6];
   out_857020396668958774[69] = 0;
   out_857020396668958774[70] = 0;
   out_857020396668958774[71] = 0;
   out_857020396668958774[72] = 0;
   out_857020396668958774[73] = 0;
   out_857020396668958774[74] = 0;
   out_857020396668958774[75] = 0;
   out_857020396668958774[76] = 0;
   out_857020396668958774[77] = 0;
   out_857020396668958774[78] = 0;
   out_857020396668958774[79] = 0;
   out_857020396668958774[80] = 0;
   out_857020396668958774[81] = 0;
   out_857020396668958774[82] = 0;
   out_857020396668958774[83] = 0;
   out_857020396668958774[84] = 0;
   out_857020396668958774[85] = 0;
   out_857020396668958774[86] = 0;
   out_857020396668958774[87] = 0.5*state[3];
   out_857020396668958774[88] = 0.5*state[6];
   out_857020396668958774[89] = -0.5*state[5];
   out_857020396668958774[90] = 0;
   out_857020396668958774[91] = 0;
   out_857020396668958774[92] = 0;
   out_857020396668958774[93] = 0;
   out_857020396668958774[94] = 0;
   out_857020396668958774[95] = 0;
   out_857020396668958774[96] = 0;
   out_857020396668958774[97] = 0;
   out_857020396668958774[98] = 0;
   out_857020396668958774[99] = 0;
   out_857020396668958774[100] = 0;
   out_857020396668958774[101] = 0;
   out_857020396668958774[102] = 0;
   out_857020396668958774[103] = 0;
   out_857020396668958774[104] = 0;
   out_857020396668958774[105] = 0;
   out_857020396668958774[106] = 0;
   out_857020396668958774[107] = 0;
   out_857020396668958774[108] = -0.5*state[6];
   out_857020396668958774[109] = 0.5*state[3];
   out_857020396668958774[110] = 0.5*state[4];
   out_857020396668958774[111] = 0;
   out_857020396668958774[112] = 0;
   out_857020396668958774[113] = 0;
   out_857020396668958774[114] = 0;
   out_857020396668958774[115] = 0;
   out_857020396668958774[116] = 0;
   out_857020396668958774[117] = 0;
   out_857020396668958774[118] = 0;
   out_857020396668958774[119] = 0;
   out_857020396668958774[120] = 0;
   out_857020396668958774[121] = 0;
   out_857020396668958774[122] = 0;
   out_857020396668958774[123] = 0;
   out_857020396668958774[124] = 0;
   out_857020396668958774[125] = 0;
   out_857020396668958774[126] = 0;
   out_857020396668958774[127] = 0;
   out_857020396668958774[128] = 0;
   out_857020396668958774[129] = 0.5*state[5];
   out_857020396668958774[130] = -0.5*state[4];
   out_857020396668958774[131] = 0.5*state[3];
   out_857020396668958774[132] = 0;
   out_857020396668958774[133] = 0;
   out_857020396668958774[134] = 0;
   out_857020396668958774[135] = 0;
   out_857020396668958774[136] = 0;
   out_857020396668958774[137] = 0;
   out_857020396668958774[138] = 0;
   out_857020396668958774[139] = 0;
   out_857020396668958774[140] = 0;
   out_857020396668958774[141] = 0;
   out_857020396668958774[142] = 0;
   out_857020396668958774[143] = 0;
   out_857020396668958774[144] = 0;
   out_857020396668958774[145] = 0;
   out_857020396668958774[146] = 0;
   out_857020396668958774[147] = 0;
   out_857020396668958774[148] = 0;
   out_857020396668958774[149] = 0;
   out_857020396668958774[150] = 0;
   out_857020396668958774[151] = 0;
   out_857020396668958774[152] = 0;
   out_857020396668958774[153] = 1.0;
   out_857020396668958774[154] = 0;
   out_857020396668958774[155] = 0;
   out_857020396668958774[156] = 0;
   out_857020396668958774[157] = 0;
   out_857020396668958774[158] = 0;
   out_857020396668958774[159] = 0;
   out_857020396668958774[160] = 0;
   out_857020396668958774[161] = 0;
   out_857020396668958774[162] = 0;
   out_857020396668958774[163] = 0;
   out_857020396668958774[164] = 0;
   out_857020396668958774[165] = 0;
   out_857020396668958774[166] = 0;
   out_857020396668958774[167] = 0;
   out_857020396668958774[168] = 0;
   out_857020396668958774[169] = 0;
   out_857020396668958774[170] = 0;
   out_857020396668958774[171] = 0;
   out_857020396668958774[172] = 0;
   out_857020396668958774[173] = 0;
   out_857020396668958774[174] = 0;
   out_857020396668958774[175] = 1.0;
   out_857020396668958774[176] = 0;
   out_857020396668958774[177] = 0;
   out_857020396668958774[178] = 0;
   out_857020396668958774[179] = 0;
   out_857020396668958774[180] = 0;
   out_857020396668958774[181] = 0;
   out_857020396668958774[182] = 0;
   out_857020396668958774[183] = 0;
   out_857020396668958774[184] = 0;
   out_857020396668958774[185] = 0;
   out_857020396668958774[186] = 0;
   out_857020396668958774[187] = 0;
   out_857020396668958774[188] = 0;
   out_857020396668958774[189] = 0;
   out_857020396668958774[190] = 0;
   out_857020396668958774[191] = 0;
   out_857020396668958774[192] = 0;
   out_857020396668958774[193] = 0;
   out_857020396668958774[194] = 0;
   out_857020396668958774[195] = 0;
   out_857020396668958774[196] = 0;
   out_857020396668958774[197] = 1.0;
   out_857020396668958774[198] = 0;
   out_857020396668958774[199] = 0;
   out_857020396668958774[200] = 0;
   out_857020396668958774[201] = 0;
   out_857020396668958774[202] = 0;
   out_857020396668958774[203] = 0;
   out_857020396668958774[204] = 0;
   out_857020396668958774[205] = 0;
   out_857020396668958774[206] = 0;
   out_857020396668958774[207] = 0;
   out_857020396668958774[208] = 0;
   out_857020396668958774[209] = 0;
   out_857020396668958774[210] = 0;
   out_857020396668958774[211] = 0;
   out_857020396668958774[212] = 0;
   out_857020396668958774[213] = 0;
   out_857020396668958774[214] = 0;
   out_857020396668958774[215] = 0;
   out_857020396668958774[216] = 0;
   out_857020396668958774[217] = 0;
   out_857020396668958774[218] = 0;
   out_857020396668958774[219] = 1.0;
   out_857020396668958774[220] = 0;
   out_857020396668958774[221] = 0;
   out_857020396668958774[222] = 0;
   out_857020396668958774[223] = 0;
   out_857020396668958774[224] = 0;
   out_857020396668958774[225] = 0;
   out_857020396668958774[226] = 0;
   out_857020396668958774[227] = 0;
   out_857020396668958774[228] = 0;
   out_857020396668958774[229] = 0;
   out_857020396668958774[230] = 0;
   out_857020396668958774[231] = 0;
   out_857020396668958774[232] = 0;
   out_857020396668958774[233] = 0;
   out_857020396668958774[234] = 0;
   out_857020396668958774[235] = 0;
   out_857020396668958774[236] = 0;
   out_857020396668958774[237] = 0;
   out_857020396668958774[238] = 0;
   out_857020396668958774[239] = 0;
   out_857020396668958774[240] = 0;
   out_857020396668958774[241] = 1.0;
   out_857020396668958774[242] = 0;
   out_857020396668958774[243] = 0;
   out_857020396668958774[244] = 0;
   out_857020396668958774[245] = 0;
   out_857020396668958774[246] = 0;
   out_857020396668958774[247] = 0;
   out_857020396668958774[248] = 0;
   out_857020396668958774[249] = 0;
   out_857020396668958774[250] = 0;
   out_857020396668958774[251] = 0;
   out_857020396668958774[252] = 0;
   out_857020396668958774[253] = 0;
   out_857020396668958774[254] = 0;
   out_857020396668958774[255] = 0;
   out_857020396668958774[256] = 0;
   out_857020396668958774[257] = 0;
   out_857020396668958774[258] = 0;
   out_857020396668958774[259] = 0;
   out_857020396668958774[260] = 0;
   out_857020396668958774[261] = 0;
   out_857020396668958774[262] = 0;
   out_857020396668958774[263] = 1.0;
   out_857020396668958774[264] = 0;
   out_857020396668958774[265] = 0;
   out_857020396668958774[266] = 0;
   out_857020396668958774[267] = 0;
   out_857020396668958774[268] = 0;
   out_857020396668958774[269] = 0;
   out_857020396668958774[270] = 0;
   out_857020396668958774[271] = 0;
   out_857020396668958774[272] = 0;
   out_857020396668958774[273] = 0;
   out_857020396668958774[274] = 0;
   out_857020396668958774[275] = 0;
   out_857020396668958774[276] = 0;
   out_857020396668958774[277] = 0;
   out_857020396668958774[278] = 0;
   out_857020396668958774[279] = 0;
   out_857020396668958774[280] = 0;
   out_857020396668958774[281] = 0;
   out_857020396668958774[282] = 0;
   out_857020396668958774[283] = 0;
   out_857020396668958774[284] = 0;
   out_857020396668958774[285] = 1.0;
   out_857020396668958774[286] = 0;
   out_857020396668958774[287] = 0;
   out_857020396668958774[288] = 0;
   out_857020396668958774[289] = 0;
   out_857020396668958774[290] = 0;
   out_857020396668958774[291] = 0;
   out_857020396668958774[292] = 0;
   out_857020396668958774[293] = 0;
   out_857020396668958774[294] = 0;
   out_857020396668958774[295] = 0;
   out_857020396668958774[296] = 0;
   out_857020396668958774[297] = 0;
   out_857020396668958774[298] = 0;
   out_857020396668958774[299] = 0;
   out_857020396668958774[300] = 0;
   out_857020396668958774[301] = 0;
   out_857020396668958774[302] = 0;
   out_857020396668958774[303] = 0;
   out_857020396668958774[304] = 0;
   out_857020396668958774[305] = 0;
   out_857020396668958774[306] = 0;
   out_857020396668958774[307] = 1.0;
   out_857020396668958774[308] = 0;
   out_857020396668958774[309] = 0;
   out_857020396668958774[310] = 0;
   out_857020396668958774[311] = 0;
   out_857020396668958774[312] = 0;
   out_857020396668958774[313] = 0;
   out_857020396668958774[314] = 0;
   out_857020396668958774[315] = 0;
   out_857020396668958774[316] = 0;
   out_857020396668958774[317] = 0;
   out_857020396668958774[318] = 0;
   out_857020396668958774[319] = 0;
   out_857020396668958774[320] = 0;
   out_857020396668958774[321] = 0;
   out_857020396668958774[322] = 0;
   out_857020396668958774[323] = 0;
   out_857020396668958774[324] = 0;
   out_857020396668958774[325] = 0;
   out_857020396668958774[326] = 0;
   out_857020396668958774[327] = 0;
   out_857020396668958774[328] = 0;
   out_857020396668958774[329] = 1.0;
   out_857020396668958774[330] = 0;
   out_857020396668958774[331] = 0;
   out_857020396668958774[332] = 0;
   out_857020396668958774[333] = 0;
   out_857020396668958774[334] = 0;
   out_857020396668958774[335] = 0;
   out_857020396668958774[336] = 0;
   out_857020396668958774[337] = 0;
   out_857020396668958774[338] = 0;
   out_857020396668958774[339] = 0;
   out_857020396668958774[340] = 0;
   out_857020396668958774[341] = 0;
   out_857020396668958774[342] = 0;
   out_857020396668958774[343] = 0;
   out_857020396668958774[344] = 0;
   out_857020396668958774[345] = 0;
   out_857020396668958774[346] = 0;
   out_857020396668958774[347] = 0;
   out_857020396668958774[348] = 0;
   out_857020396668958774[349] = 0;
   out_857020396668958774[350] = 0;
   out_857020396668958774[351] = 1.0;
   out_857020396668958774[352] = 0;
   out_857020396668958774[353] = 0;
   out_857020396668958774[354] = 0;
   out_857020396668958774[355] = 0;
   out_857020396668958774[356] = 0;
   out_857020396668958774[357] = 0;
   out_857020396668958774[358] = 0;
   out_857020396668958774[359] = 0;
   out_857020396668958774[360] = 0;
   out_857020396668958774[361] = 0;
   out_857020396668958774[362] = 0;
   out_857020396668958774[363] = 0;
   out_857020396668958774[364] = 0;
   out_857020396668958774[365] = 0;
   out_857020396668958774[366] = 0;
   out_857020396668958774[367] = 0;
   out_857020396668958774[368] = 0;
   out_857020396668958774[369] = 0;
   out_857020396668958774[370] = 0;
   out_857020396668958774[371] = 0;
   out_857020396668958774[372] = 0;
   out_857020396668958774[373] = 1.0;
   out_857020396668958774[374] = 0;
   out_857020396668958774[375] = 0;
   out_857020396668958774[376] = 0;
   out_857020396668958774[377] = 0;
   out_857020396668958774[378] = 0;
   out_857020396668958774[379] = 0;
   out_857020396668958774[380] = 0;
   out_857020396668958774[381] = 0;
   out_857020396668958774[382] = 0;
   out_857020396668958774[383] = 0;
   out_857020396668958774[384] = 0;
   out_857020396668958774[385] = 0;
   out_857020396668958774[386] = 0;
   out_857020396668958774[387] = 0;
   out_857020396668958774[388] = 0;
   out_857020396668958774[389] = 0;
   out_857020396668958774[390] = 0;
   out_857020396668958774[391] = 0;
   out_857020396668958774[392] = 0;
   out_857020396668958774[393] = 0;
   out_857020396668958774[394] = 0;
   out_857020396668958774[395] = 1.0;
   out_857020396668958774[396] = 0;
   out_857020396668958774[397] = 0;
   out_857020396668958774[398] = 0;
   out_857020396668958774[399] = 0;
   out_857020396668958774[400] = 0;
   out_857020396668958774[401] = 0;
   out_857020396668958774[402] = 0;
   out_857020396668958774[403] = 0;
   out_857020396668958774[404] = 0;
   out_857020396668958774[405] = 0;
   out_857020396668958774[406] = 0;
   out_857020396668958774[407] = 0;
   out_857020396668958774[408] = 0;
   out_857020396668958774[409] = 0;
   out_857020396668958774[410] = 0;
   out_857020396668958774[411] = 0;
   out_857020396668958774[412] = 0;
   out_857020396668958774[413] = 0;
   out_857020396668958774[414] = 0;
   out_857020396668958774[415] = 0;
   out_857020396668958774[416] = 0;
   out_857020396668958774[417] = 1.0;
   out_857020396668958774[418] = 0;
   out_857020396668958774[419] = 0;
   out_857020396668958774[420] = 0;
   out_857020396668958774[421] = 0;
   out_857020396668958774[422] = 0;
   out_857020396668958774[423] = 0;
   out_857020396668958774[424] = 0;
   out_857020396668958774[425] = 0;
   out_857020396668958774[426] = 0;
   out_857020396668958774[427] = 0;
   out_857020396668958774[428] = 0;
   out_857020396668958774[429] = 0;
   out_857020396668958774[430] = 0;
   out_857020396668958774[431] = 0;
   out_857020396668958774[432] = 0;
   out_857020396668958774[433] = 0;
   out_857020396668958774[434] = 0;
   out_857020396668958774[435] = 0;
   out_857020396668958774[436] = 0;
   out_857020396668958774[437] = 0;
   out_857020396668958774[438] = 0;
   out_857020396668958774[439] = 1.0;
   out_857020396668958774[440] = 0;
   out_857020396668958774[441] = 0;
   out_857020396668958774[442] = 0;
   out_857020396668958774[443] = 0;
   out_857020396668958774[444] = 0;
   out_857020396668958774[445] = 0;
   out_857020396668958774[446] = 0;
   out_857020396668958774[447] = 0;
   out_857020396668958774[448] = 0;
   out_857020396668958774[449] = 0;
   out_857020396668958774[450] = 0;
   out_857020396668958774[451] = 0;
   out_857020396668958774[452] = 0;
   out_857020396668958774[453] = 0;
   out_857020396668958774[454] = 0;
   out_857020396668958774[455] = 0;
   out_857020396668958774[456] = 0;
   out_857020396668958774[457] = 0;
   out_857020396668958774[458] = 0;
   out_857020396668958774[459] = 0;
   out_857020396668958774[460] = 0;
   out_857020396668958774[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8594626317175388658) {
   out_8594626317175388658[0] = dt*state[7] + state[0];
   out_8594626317175388658[1] = dt*state[8] + state[1];
   out_8594626317175388658[2] = dt*state[9] + state[2];
   out_8594626317175388658[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8594626317175388658[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8594626317175388658[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8594626317175388658[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8594626317175388658[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8594626317175388658[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8594626317175388658[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8594626317175388658[10] = state[10];
   out_8594626317175388658[11] = state[11];
   out_8594626317175388658[12] = state[12];
   out_8594626317175388658[13] = state[13];
   out_8594626317175388658[14] = state[14];
   out_8594626317175388658[15] = state[15];
   out_8594626317175388658[16] = state[16];
   out_8594626317175388658[17] = state[17];
   out_8594626317175388658[18] = state[18];
   out_8594626317175388658[19] = state[19];
   out_8594626317175388658[20] = state[20];
   out_8594626317175388658[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2686999570181155255) {
   out_2686999570181155255[0] = 1;
   out_2686999570181155255[1] = 0;
   out_2686999570181155255[2] = 0;
   out_2686999570181155255[3] = 0;
   out_2686999570181155255[4] = 0;
   out_2686999570181155255[5] = 0;
   out_2686999570181155255[6] = dt;
   out_2686999570181155255[7] = 0;
   out_2686999570181155255[8] = 0;
   out_2686999570181155255[9] = 0;
   out_2686999570181155255[10] = 0;
   out_2686999570181155255[11] = 0;
   out_2686999570181155255[12] = 0;
   out_2686999570181155255[13] = 0;
   out_2686999570181155255[14] = 0;
   out_2686999570181155255[15] = 0;
   out_2686999570181155255[16] = 0;
   out_2686999570181155255[17] = 0;
   out_2686999570181155255[18] = 0;
   out_2686999570181155255[19] = 0;
   out_2686999570181155255[20] = 0;
   out_2686999570181155255[21] = 0;
   out_2686999570181155255[22] = 1;
   out_2686999570181155255[23] = 0;
   out_2686999570181155255[24] = 0;
   out_2686999570181155255[25] = 0;
   out_2686999570181155255[26] = 0;
   out_2686999570181155255[27] = 0;
   out_2686999570181155255[28] = dt;
   out_2686999570181155255[29] = 0;
   out_2686999570181155255[30] = 0;
   out_2686999570181155255[31] = 0;
   out_2686999570181155255[32] = 0;
   out_2686999570181155255[33] = 0;
   out_2686999570181155255[34] = 0;
   out_2686999570181155255[35] = 0;
   out_2686999570181155255[36] = 0;
   out_2686999570181155255[37] = 0;
   out_2686999570181155255[38] = 0;
   out_2686999570181155255[39] = 0;
   out_2686999570181155255[40] = 0;
   out_2686999570181155255[41] = 0;
   out_2686999570181155255[42] = 0;
   out_2686999570181155255[43] = 0;
   out_2686999570181155255[44] = 1;
   out_2686999570181155255[45] = 0;
   out_2686999570181155255[46] = 0;
   out_2686999570181155255[47] = 0;
   out_2686999570181155255[48] = 0;
   out_2686999570181155255[49] = 0;
   out_2686999570181155255[50] = dt;
   out_2686999570181155255[51] = 0;
   out_2686999570181155255[52] = 0;
   out_2686999570181155255[53] = 0;
   out_2686999570181155255[54] = 0;
   out_2686999570181155255[55] = 0;
   out_2686999570181155255[56] = 0;
   out_2686999570181155255[57] = 0;
   out_2686999570181155255[58] = 0;
   out_2686999570181155255[59] = 0;
   out_2686999570181155255[60] = 0;
   out_2686999570181155255[61] = 0;
   out_2686999570181155255[62] = 0;
   out_2686999570181155255[63] = 0;
   out_2686999570181155255[64] = 0;
   out_2686999570181155255[65] = 0;
   out_2686999570181155255[66] = 1;
   out_2686999570181155255[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2686999570181155255[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2686999570181155255[69] = 0;
   out_2686999570181155255[70] = 0;
   out_2686999570181155255[71] = 0;
   out_2686999570181155255[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2686999570181155255[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2686999570181155255[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2686999570181155255[75] = 0;
   out_2686999570181155255[76] = 0;
   out_2686999570181155255[77] = 0;
   out_2686999570181155255[78] = 0;
   out_2686999570181155255[79] = 0;
   out_2686999570181155255[80] = 0;
   out_2686999570181155255[81] = 0;
   out_2686999570181155255[82] = 0;
   out_2686999570181155255[83] = 0;
   out_2686999570181155255[84] = 0;
   out_2686999570181155255[85] = 0;
   out_2686999570181155255[86] = 0;
   out_2686999570181155255[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2686999570181155255[88] = 1;
   out_2686999570181155255[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2686999570181155255[90] = 0;
   out_2686999570181155255[91] = 0;
   out_2686999570181155255[92] = 0;
   out_2686999570181155255[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2686999570181155255[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2686999570181155255[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2686999570181155255[96] = 0;
   out_2686999570181155255[97] = 0;
   out_2686999570181155255[98] = 0;
   out_2686999570181155255[99] = 0;
   out_2686999570181155255[100] = 0;
   out_2686999570181155255[101] = 0;
   out_2686999570181155255[102] = 0;
   out_2686999570181155255[103] = 0;
   out_2686999570181155255[104] = 0;
   out_2686999570181155255[105] = 0;
   out_2686999570181155255[106] = 0;
   out_2686999570181155255[107] = 0;
   out_2686999570181155255[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2686999570181155255[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2686999570181155255[110] = 1;
   out_2686999570181155255[111] = 0;
   out_2686999570181155255[112] = 0;
   out_2686999570181155255[113] = 0;
   out_2686999570181155255[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2686999570181155255[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2686999570181155255[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2686999570181155255[117] = 0;
   out_2686999570181155255[118] = 0;
   out_2686999570181155255[119] = 0;
   out_2686999570181155255[120] = 0;
   out_2686999570181155255[121] = 0;
   out_2686999570181155255[122] = 0;
   out_2686999570181155255[123] = 0;
   out_2686999570181155255[124] = 0;
   out_2686999570181155255[125] = 0;
   out_2686999570181155255[126] = 0;
   out_2686999570181155255[127] = 0;
   out_2686999570181155255[128] = 0;
   out_2686999570181155255[129] = 0;
   out_2686999570181155255[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2686999570181155255[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2686999570181155255[132] = 1;
   out_2686999570181155255[133] = 0;
   out_2686999570181155255[134] = 0;
   out_2686999570181155255[135] = 0;
   out_2686999570181155255[136] = 0;
   out_2686999570181155255[137] = 0;
   out_2686999570181155255[138] = 0;
   out_2686999570181155255[139] = 0;
   out_2686999570181155255[140] = 0;
   out_2686999570181155255[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2686999570181155255[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2686999570181155255[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2686999570181155255[144] = 0;
   out_2686999570181155255[145] = 0;
   out_2686999570181155255[146] = 0;
   out_2686999570181155255[147] = 0;
   out_2686999570181155255[148] = 0;
   out_2686999570181155255[149] = 0;
   out_2686999570181155255[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2686999570181155255[151] = 0;
   out_2686999570181155255[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2686999570181155255[153] = 0;
   out_2686999570181155255[154] = 1;
   out_2686999570181155255[155] = 0;
   out_2686999570181155255[156] = 0;
   out_2686999570181155255[157] = 0;
   out_2686999570181155255[158] = 0;
   out_2686999570181155255[159] = 0;
   out_2686999570181155255[160] = 0;
   out_2686999570181155255[161] = 0;
   out_2686999570181155255[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2686999570181155255[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2686999570181155255[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2686999570181155255[165] = 0;
   out_2686999570181155255[166] = 0;
   out_2686999570181155255[167] = 0;
   out_2686999570181155255[168] = 0;
   out_2686999570181155255[169] = 0;
   out_2686999570181155255[170] = 0;
   out_2686999570181155255[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2686999570181155255[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2686999570181155255[173] = 0;
   out_2686999570181155255[174] = 0;
   out_2686999570181155255[175] = 0;
   out_2686999570181155255[176] = 1;
   out_2686999570181155255[177] = 0;
   out_2686999570181155255[178] = 0;
   out_2686999570181155255[179] = 0;
   out_2686999570181155255[180] = 0;
   out_2686999570181155255[181] = 0;
   out_2686999570181155255[182] = 0;
   out_2686999570181155255[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2686999570181155255[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2686999570181155255[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2686999570181155255[186] = 0;
   out_2686999570181155255[187] = 0;
   out_2686999570181155255[188] = 0;
   out_2686999570181155255[189] = 0;
   out_2686999570181155255[190] = 0;
   out_2686999570181155255[191] = 0;
   out_2686999570181155255[192] = 0;
   out_2686999570181155255[193] = 0;
   out_2686999570181155255[194] = 0;
   out_2686999570181155255[195] = 0;
   out_2686999570181155255[196] = 0;
   out_2686999570181155255[197] = 0;
   out_2686999570181155255[198] = 1;
   out_2686999570181155255[199] = 0;
   out_2686999570181155255[200] = 0;
   out_2686999570181155255[201] = 0;
   out_2686999570181155255[202] = 0;
   out_2686999570181155255[203] = 0;
   out_2686999570181155255[204] = 0;
   out_2686999570181155255[205] = 0;
   out_2686999570181155255[206] = 0;
   out_2686999570181155255[207] = 0;
   out_2686999570181155255[208] = 0;
   out_2686999570181155255[209] = 0;
   out_2686999570181155255[210] = 0;
   out_2686999570181155255[211] = 0;
   out_2686999570181155255[212] = 0;
   out_2686999570181155255[213] = 0;
   out_2686999570181155255[214] = 0;
   out_2686999570181155255[215] = 0;
   out_2686999570181155255[216] = 0;
   out_2686999570181155255[217] = 0;
   out_2686999570181155255[218] = 0;
   out_2686999570181155255[219] = 0;
   out_2686999570181155255[220] = 1;
   out_2686999570181155255[221] = 0;
   out_2686999570181155255[222] = 0;
   out_2686999570181155255[223] = 0;
   out_2686999570181155255[224] = 0;
   out_2686999570181155255[225] = 0;
   out_2686999570181155255[226] = 0;
   out_2686999570181155255[227] = 0;
   out_2686999570181155255[228] = 0;
   out_2686999570181155255[229] = 0;
   out_2686999570181155255[230] = 0;
   out_2686999570181155255[231] = 0;
   out_2686999570181155255[232] = 0;
   out_2686999570181155255[233] = 0;
   out_2686999570181155255[234] = 0;
   out_2686999570181155255[235] = 0;
   out_2686999570181155255[236] = 0;
   out_2686999570181155255[237] = 0;
   out_2686999570181155255[238] = 0;
   out_2686999570181155255[239] = 0;
   out_2686999570181155255[240] = 0;
   out_2686999570181155255[241] = 0;
   out_2686999570181155255[242] = 1;
   out_2686999570181155255[243] = 0;
   out_2686999570181155255[244] = 0;
   out_2686999570181155255[245] = 0;
   out_2686999570181155255[246] = 0;
   out_2686999570181155255[247] = 0;
   out_2686999570181155255[248] = 0;
   out_2686999570181155255[249] = 0;
   out_2686999570181155255[250] = 0;
   out_2686999570181155255[251] = 0;
   out_2686999570181155255[252] = 0;
   out_2686999570181155255[253] = 0;
   out_2686999570181155255[254] = 0;
   out_2686999570181155255[255] = 0;
   out_2686999570181155255[256] = 0;
   out_2686999570181155255[257] = 0;
   out_2686999570181155255[258] = 0;
   out_2686999570181155255[259] = 0;
   out_2686999570181155255[260] = 0;
   out_2686999570181155255[261] = 0;
   out_2686999570181155255[262] = 0;
   out_2686999570181155255[263] = 0;
   out_2686999570181155255[264] = 1;
   out_2686999570181155255[265] = 0;
   out_2686999570181155255[266] = 0;
   out_2686999570181155255[267] = 0;
   out_2686999570181155255[268] = 0;
   out_2686999570181155255[269] = 0;
   out_2686999570181155255[270] = 0;
   out_2686999570181155255[271] = 0;
   out_2686999570181155255[272] = 0;
   out_2686999570181155255[273] = 0;
   out_2686999570181155255[274] = 0;
   out_2686999570181155255[275] = 0;
   out_2686999570181155255[276] = 0;
   out_2686999570181155255[277] = 0;
   out_2686999570181155255[278] = 0;
   out_2686999570181155255[279] = 0;
   out_2686999570181155255[280] = 0;
   out_2686999570181155255[281] = 0;
   out_2686999570181155255[282] = 0;
   out_2686999570181155255[283] = 0;
   out_2686999570181155255[284] = 0;
   out_2686999570181155255[285] = 0;
   out_2686999570181155255[286] = 1;
   out_2686999570181155255[287] = 0;
   out_2686999570181155255[288] = 0;
   out_2686999570181155255[289] = 0;
   out_2686999570181155255[290] = 0;
   out_2686999570181155255[291] = 0;
   out_2686999570181155255[292] = 0;
   out_2686999570181155255[293] = 0;
   out_2686999570181155255[294] = 0;
   out_2686999570181155255[295] = 0;
   out_2686999570181155255[296] = 0;
   out_2686999570181155255[297] = 0;
   out_2686999570181155255[298] = 0;
   out_2686999570181155255[299] = 0;
   out_2686999570181155255[300] = 0;
   out_2686999570181155255[301] = 0;
   out_2686999570181155255[302] = 0;
   out_2686999570181155255[303] = 0;
   out_2686999570181155255[304] = 0;
   out_2686999570181155255[305] = 0;
   out_2686999570181155255[306] = 0;
   out_2686999570181155255[307] = 0;
   out_2686999570181155255[308] = 1;
   out_2686999570181155255[309] = 0;
   out_2686999570181155255[310] = 0;
   out_2686999570181155255[311] = 0;
   out_2686999570181155255[312] = 0;
   out_2686999570181155255[313] = 0;
   out_2686999570181155255[314] = 0;
   out_2686999570181155255[315] = 0;
   out_2686999570181155255[316] = 0;
   out_2686999570181155255[317] = 0;
   out_2686999570181155255[318] = 0;
   out_2686999570181155255[319] = 0;
   out_2686999570181155255[320] = 0;
   out_2686999570181155255[321] = 0;
   out_2686999570181155255[322] = 0;
   out_2686999570181155255[323] = 0;
   out_2686999570181155255[324] = 0;
   out_2686999570181155255[325] = 0;
   out_2686999570181155255[326] = 0;
   out_2686999570181155255[327] = 0;
   out_2686999570181155255[328] = 0;
   out_2686999570181155255[329] = 0;
   out_2686999570181155255[330] = 1;
   out_2686999570181155255[331] = 0;
   out_2686999570181155255[332] = 0;
   out_2686999570181155255[333] = 0;
   out_2686999570181155255[334] = 0;
   out_2686999570181155255[335] = 0;
   out_2686999570181155255[336] = 0;
   out_2686999570181155255[337] = 0;
   out_2686999570181155255[338] = 0;
   out_2686999570181155255[339] = 0;
   out_2686999570181155255[340] = 0;
   out_2686999570181155255[341] = 0;
   out_2686999570181155255[342] = 0;
   out_2686999570181155255[343] = 0;
   out_2686999570181155255[344] = 0;
   out_2686999570181155255[345] = 0;
   out_2686999570181155255[346] = 0;
   out_2686999570181155255[347] = 0;
   out_2686999570181155255[348] = 0;
   out_2686999570181155255[349] = 0;
   out_2686999570181155255[350] = 0;
   out_2686999570181155255[351] = 0;
   out_2686999570181155255[352] = 1;
   out_2686999570181155255[353] = 0;
   out_2686999570181155255[354] = 0;
   out_2686999570181155255[355] = 0;
   out_2686999570181155255[356] = 0;
   out_2686999570181155255[357] = 0;
   out_2686999570181155255[358] = 0;
   out_2686999570181155255[359] = 0;
   out_2686999570181155255[360] = 0;
   out_2686999570181155255[361] = 0;
   out_2686999570181155255[362] = 0;
   out_2686999570181155255[363] = 0;
   out_2686999570181155255[364] = 0;
   out_2686999570181155255[365] = 0;
   out_2686999570181155255[366] = 0;
   out_2686999570181155255[367] = 0;
   out_2686999570181155255[368] = 0;
   out_2686999570181155255[369] = 0;
   out_2686999570181155255[370] = 0;
   out_2686999570181155255[371] = 0;
   out_2686999570181155255[372] = 0;
   out_2686999570181155255[373] = 0;
   out_2686999570181155255[374] = 1;
   out_2686999570181155255[375] = 0;
   out_2686999570181155255[376] = 0;
   out_2686999570181155255[377] = 0;
   out_2686999570181155255[378] = 0;
   out_2686999570181155255[379] = 0;
   out_2686999570181155255[380] = 0;
   out_2686999570181155255[381] = 0;
   out_2686999570181155255[382] = 0;
   out_2686999570181155255[383] = 0;
   out_2686999570181155255[384] = 0;
   out_2686999570181155255[385] = 0;
   out_2686999570181155255[386] = 0;
   out_2686999570181155255[387] = 0;
   out_2686999570181155255[388] = 0;
   out_2686999570181155255[389] = 0;
   out_2686999570181155255[390] = 0;
   out_2686999570181155255[391] = 0;
   out_2686999570181155255[392] = 0;
   out_2686999570181155255[393] = 0;
   out_2686999570181155255[394] = 0;
   out_2686999570181155255[395] = 0;
   out_2686999570181155255[396] = 1;
   out_2686999570181155255[397] = 0;
   out_2686999570181155255[398] = 0;
   out_2686999570181155255[399] = 0;
   out_2686999570181155255[400] = 0;
   out_2686999570181155255[401] = 0;
   out_2686999570181155255[402] = 0;
   out_2686999570181155255[403] = 0;
   out_2686999570181155255[404] = 0;
   out_2686999570181155255[405] = 0;
   out_2686999570181155255[406] = 0;
   out_2686999570181155255[407] = 0;
   out_2686999570181155255[408] = 0;
   out_2686999570181155255[409] = 0;
   out_2686999570181155255[410] = 0;
   out_2686999570181155255[411] = 0;
   out_2686999570181155255[412] = 0;
   out_2686999570181155255[413] = 0;
   out_2686999570181155255[414] = 0;
   out_2686999570181155255[415] = 0;
   out_2686999570181155255[416] = 0;
   out_2686999570181155255[417] = 0;
   out_2686999570181155255[418] = 1;
   out_2686999570181155255[419] = 0;
   out_2686999570181155255[420] = 0;
   out_2686999570181155255[421] = 0;
   out_2686999570181155255[422] = 0;
   out_2686999570181155255[423] = 0;
   out_2686999570181155255[424] = 0;
   out_2686999570181155255[425] = 0;
   out_2686999570181155255[426] = 0;
   out_2686999570181155255[427] = 0;
   out_2686999570181155255[428] = 0;
   out_2686999570181155255[429] = 0;
   out_2686999570181155255[430] = 0;
   out_2686999570181155255[431] = 0;
   out_2686999570181155255[432] = 0;
   out_2686999570181155255[433] = 0;
   out_2686999570181155255[434] = 0;
   out_2686999570181155255[435] = 0;
   out_2686999570181155255[436] = 0;
   out_2686999570181155255[437] = 0;
   out_2686999570181155255[438] = 0;
   out_2686999570181155255[439] = 0;
   out_2686999570181155255[440] = 1;
}
void h_4(double *state, double *unused, double *out_1981103364723989574) {
   out_1981103364723989574[0] = state[10] + state[13];
   out_1981103364723989574[1] = state[11] + state[14];
   out_1981103364723989574[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2811390932214119266) {
   out_2811390932214119266[0] = 0;
   out_2811390932214119266[1] = 0;
   out_2811390932214119266[2] = 0;
   out_2811390932214119266[3] = 0;
   out_2811390932214119266[4] = 0;
   out_2811390932214119266[5] = 0;
   out_2811390932214119266[6] = 0;
   out_2811390932214119266[7] = 0;
   out_2811390932214119266[8] = 0;
   out_2811390932214119266[9] = 0;
   out_2811390932214119266[10] = 1;
   out_2811390932214119266[11] = 0;
   out_2811390932214119266[12] = 0;
   out_2811390932214119266[13] = 1;
   out_2811390932214119266[14] = 0;
   out_2811390932214119266[15] = 0;
   out_2811390932214119266[16] = 0;
   out_2811390932214119266[17] = 0;
   out_2811390932214119266[18] = 0;
   out_2811390932214119266[19] = 0;
   out_2811390932214119266[20] = 0;
   out_2811390932214119266[21] = 0;
   out_2811390932214119266[22] = 0;
   out_2811390932214119266[23] = 0;
   out_2811390932214119266[24] = 0;
   out_2811390932214119266[25] = 0;
   out_2811390932214119266[26] = 0;
   out_2811390932214119266[27] = 0;
   out_2811390932214119266[28] = 0;
   out_2811390932214119266[29] = 0;
   out_2811390932214119266[30] = 0;
   out_2811390932214119266[31] = 0;
   out_2811390932214119266[32] = 0;
   out_2811390932214119266[33] = 1;
   out_2811390932214119266[34] = 0;
   out_2811390932214119266[35] = 0;
   out_2811390932214119266[36] = 1;
   out_2811390932214119266[37] = 0;
   out_2811390932214119266[38] = 0;
   out_2811390932214119266[39] = 0;
   out_2811390932214119266[40] = 0;
   out_2811390932214119266[41] = 0;
   out_2811390932214119266[42] = 0;
   out_2811390932214119266[43] = 0;
   out_2811390932214119266[44] = 0;
   out_2811390932214119266[45] = 0;
   out_2811390932214119266[46] = 0;
   out_2811390932214119266[47] = 0;
   out_2811390932214119266[48] = 0;
   out_2811390932214119266[49] = 0;
   out_2811390932214119266[50] = 0;
   out_2811390932214119266[51] = 0;
   out_2811390932214119266[52] = 0;
   out_2811390932214119266[53] = 0;
   out_2811390932214119266[54] = 0;
   out_2811390932214119266[55] = 0;
   out_2811390932214119266[56] = 1;
   out_2811390932214119266[57] = 0;
   out_2811390932214119266[58] = 0;
   out_2811390932214119266[59] = 1;
   out_2811390932214119266[60] = 0;
   out_2811390932214119266[61] = 0;
   out_2811390932214119266[62] = 0;
   out_2811390932214119266[63] = 0;
   out_2811390932214119266[64] = 0;
   out_2811390932214119266[65] = 0;
}
void h_9(double *state, double *unused, double *out_4657013390034409161) {
   out_4657013390034409161[0] = state[10];
   out_4657013390034409161[1] = state[11];
   out_4657013390034409161[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8348134206230984880) {
   out_8348134206230984880[0] = 0;
   out_8348134206230984880[1] = 0;
   out_8348134206230984880[2] = 0;
   out_8348134206230984880[3] = 0;
   out_8348134206230984880[4] = 0;
   out_8348134206230984880[5] = 0;
   out_8348134206230984880[6] = 0;
   out_8348134206230984880[7] = 0;
   out_8348134206230984880[8] = 0;
   out_8348134206230984880[9] = 0;
   out_8348134206230984880[10] = 1;
   out_8348134206230984880[11] = 0;
   out_8348134206230984880[12] = 0;
   out_8348134206230984880[13] = 0;
   out_8348134206230984880[14] = 0;
   out_8348134206230984880[15] = 0;
   out_8348134206230984880[16] = 0;
   out_8348134206230984880[17] = 0;
   out_8348134206230984880[18] = 0;
   out_8348134206230984880[19] = 0;
   out_8348134206230984880[20] = 0;
   out_8348134206230984880[21] = 0;
   out_8348134206230984880[22] = 0;
   out_8348134206230984880[23] = 0;
   out_8348134206230984880[24] = 0;
   out_8348134206230984880[25] = 0;
   out_8348134206230984880[26] = 0;
   out_8348134206230984880[27] = 0;
   out_8348134206230984880[28] = 0;
   out_8348134206230984880[29] = 0;
   out_8348134206230984880[30] = 0;
   out_8348134206230984880[31] = 0;
   out_8348134206230984880[32] = 0;
   out_8348134206230984880[33] = 1;
   out_8348134206230984880[34] = 0;
   out_8348134206230984880[35] = 0;
   out_8348134206230984880[36] = 0;
   out_8348134206230984880[37] = 0;
   out_8348134206230984880[38] = 0;
   out_8348134206230984880[39] = 0;
   out_8348134206230984880[40] = 0;
   out_8348134206230984880[41] = 0;
   out_8348134206230984880[42] = 0;
   out_8348134206230984880[43] = 0;
   out_8348134206230984880[44] = 0;
   out_8348134206230984880[45] = 0;
   out_8348134206230984880[46] = 0;
   out_8348134206230984880[47] = 0;
   out_8348134206230984880[48] = 0;
   out_8348134206230984880[49] = 0;
   out_8348134206230984880[50] = 0;
   out_8348134206230984880[51] = 0;
   out_8348134206230984880[52] = 0;
   out_8348134206230984880[53] = 0;
   out_8348134206230984880[54] = 0;
   out_8348134206230984880[55] = 0;
   out_8348134206230984880[56] = 1;
   out_8348134206230984880[57] = 0;
   out_8348134206230984880[58] = 0;
   out_8348134206230984880[59] = 0;
   out_8348134206230984880[60] = 0;
   out_8348134206230984880[61] = 0;
   out_8348134206230984880[62] = 0;
   out_8348134206230984880[63] = 0;
   out_8348134206230984880[64] = 0;
   out_8348134206230984880[65] = 0;
}
void h_10(double *state, double *unused, double *out_2164776807616556046) {
   out_2164776807616556046[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2164776807616556046[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2164776807616556046[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_244317375542918480) {
   out_244317375542918480[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_244317375542918480[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_244317375542918480[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_244317375542918480[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244317375542918480[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244317375542918480[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244317375542918480[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244317375542918480[7] = 0;
   out_244317375542918480[8] = 0;
   out_244317375542918480[9] = 0;
   out_244317375542918480[10] = 0;
   out_244317375542918480[11] = 0;
   out_244317375542918480[12] = 0;
   out_244317375542918480[13] = 0;
   out_244317375542918480[14] = 0;
   out_244317375542918480[15] = 0;
   out_244317375542918480[16] = 1;
   out_244317375542918480[17] = 0;
   out_244317375542918480[18] = 0;
   out_244317375542918480[19] = 1;
   out_244317375542918480[20] = 0;
   out_244317375542918480[21] = 0;
   out_244317375542918480[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_244317375542918480[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_244317375542918480[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_244317375542918480[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244317375542918480[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244317375542918480[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244317375542918480[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244317375542918480[29] = 0;
   out_244317375542918480[30] = 0;
   out_244317375542918480[31] = 0;
   out_244317375542918480[32] = 0;
   out_244317375542918480[33] = 0;
   out_244317375542918480[34] = 0;
   out_244317375542918480[35] = 0;
   out_244317375542918480[36] = 0;
   out_244317375542918480[37] = 0;
   out_244317375542918480[38] = 0;
   out_244317375542918480[39] = 1;
   out_244317375542918480[40] = 0;
   out_244317375542918480[41] = 0;
   out_244317375542918480[42] = 1;
   out_244317375542918480[43] = 0;
   out_244317375542918480[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_244317375542918480[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_244317375542918480[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_244317375542918480[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_244317375542918480[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_244317375542918480[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_244317375542918480[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_244317375542918480[51] = 0;
   out_244317375542918480[52] = 0;
   out_244317375542918480[53] = 0;
   out_244317375542918480[54] = 0;
   out_244317375542918480[55] = 0;
   out_244317375542918480[56] = 0;
   out_244317375542918480[57] = 0;
   out_244317375542918480[58] = 0;
   out_244317375542918480[59] = 0;
   out_244317375542918480[60] = 0;
   out_244317375542918480[61] = 0;
   out_244317375542918480[62] = 1;
   out_244317375542918480[63] = 0;
   out_244317375542918480[64] = 0;
   out_244317375542918480[65] = 1;
}
void h_12(double *state, double *unused, double *out_6579105792362423226) {
   out_6579105792362423226[0] = state[0];
   out_6579105792362423226[1] = state[1];
   out_6579105792362423226[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7830847340246081061) {
   out_7830847340246081061[0] = 1;
   out_7830847340246081061[1] = 0;
   out_7830847340246081061[2] = 0;
   out_7830847340246081061[3] = 0;
   out_7830847340246081061[4] = 0;
   out_7830847340246081061[5] = 0;
   out_7830847340246081061[6] = 0;
   out_7830847340246081061[7] = 0;
   out_7830847340246081061[8] = 0;
   out_7830847340246081061[9] = 0;
   out_7830847340246081061[10] = 0;
   out_7830847340246081061[11] = 0;
   out_7830847340246081061[12] = 0;
   out_7830847340246081061[13] = 0;
   out_7830847340246081061[14] = 0;
   out_7830847340246081061[15] = 0;
   out_7830847340246081061[16] = 0;
   out_7830847340246081061[17] = 0;
   out_7830847340246081061[18] = 0;
   out_7830847340246081061[19] = 0;
   out_7830847340246081061[20] = 0;
   out_7830847340246081061[21] = 0;
   out_7830847340246081061[22] = 0;
   out_7830847340246081061[23] = 1;
   out_7830847340246081061[24] = 0;
   out_7830847340246081061[25] = 0;
   out_7830847340246081061[26] = 0;
   out_7830847340246081061[27] = 0;
   out_7830847340246081061[28] = 0;
   out_7830847340246081061[29] = 0;
   out_7830847340246081061[30] = 0;
   out_7830847340246081061[31] = 0;
   out_7830847340246081061[32] = 0;
   out_7830847340246081061[33] = 0;
   out_7830847340246081061[34] = 0;
   out_7830847340246081061[35] = 0;
   out_7830847340246081061[36] = 0;
   out_7830847340246081061[37] = 0;
   out_7830847340246081061[38] = 0;
   out_7830847340246081061[39] = 0;
   out_7830847340246081061[40] = 0;
   out_7830847340246081061[41] = 0;
   out_7830847340246081061[42] = 0;
   out_7830847340246081061[43] = 0;
   out_7830847340246081061[44] = 0;
   out_7830847340246081061[45] = 0;
   out_7830847340246081061[46] = 1;
   out_7830847340246081061[47] = 0;
   out_7830847340246081061[48] = 0;
   out_7830847340246081061[49] = 0;
   out_7830847340246081061[50] = 0;
   out_7830847340246081061[51] = 0;
   out_7830847340246081061[52] = 0;
   out_7830847340246081061[53] = 0;
   out_7830847340246081061[54] = 0;
   out_7830847340246081061[55] = 0;
   out_7830847340246081061[56] = 0;
   out_7830847340246081061[57] = 0;
   out_7830847340246081061[58] = 0;
   out_7830847340246081061[59] = 0;
   out_7830847340246081061[60] = 0;
   out_7830847340246081061[61] = 0;
   out_7830847340246081061[62] = 0;
   out_7830847340246081061[63] = 0;
   out_7830847340246081061[64] = 0;
   out_7830847340246081061[65] = 0;
}
void h_31(double *state, double *unused, double *out_3986579323893169117) {
   out_3986579323893169117[0] = state[7];
   out_3986579323893169117[1] = state[8];
   out_3986579323893169117[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6178052989586726642) {
   out_6178052989586726642[0] = 0;
   out_6178052989586726642[1] = 0;
   out_6178052989586726642[2] = 0;
   out_6178052989586726642[3] = 0;
   out_6178052989586726642[4] = 0;
   out_6178052989586726642[5] = 0;
   out_6178052989586726642[6] = 0;
   out_6178052989586726642[7] = 1;
   out_6178052989586726642[8] = 0;
   out_6178052989586726642[9] = 0;
   out_6178052989586726642[10] = 0;
   out_6178052989586726642[11] = 0;
   out_6178052989586726642[12] = 0;
   out_6178052989586726642[13] = 0;
   out_6178052989586726642[14] = 0;
   out_6178052989586726642[15] = 0;
   out_6178052989586726642[16] = 0;
   out_6178052989586726642[17] = 0;
   out_6178052989586726642[18] = 0;
   out_6178052989586726642[19] = 0;
   out_6178052989586726642[20] = 0;
   out_6178052989586726642[21] = 0;
   out_6178052989586726642[22] = 0;
   out_6178052989586726642[23] = 0;
   out_6178052989586726642[24] = 0;
   out_6178052989586726642[25] = 0;
   out_6178052989586726642[26] = 0;
   out_6178052989586726642[27] = 0;
   out_6178052989586726642[28] = 0;
   out_6178052989586726642[29] = 0;
   out_6178052989586726642[30] = 1;
   out_6178052989586726642[31] = 0;
   out_6178052989586726642[32] = 0;
   out_6178052989586726642[33] = 0;
   out_6178052989586726642[34] = 0;
   out_6178052989586726642[35] = 0;
   out_6178052989586726642[36] = 0;
   out_6178052989586726642[37] = 0;
   out_6178052989586726642[38] = 0;
   out_6178052989586726642[39] = 0;
   out_6178052989586726642[40] = 0;
   out_6178052989586726642[41] = 0;
   out_6178052989586726642[42] = 0;
   out_6178052989586726642[43] = 0;
   out_6178052989586726642[44] = 0;
   out_6178052989586726642[45] = 0;
   out_6178052989586726642[46] = 0;
   out_6178052989586726642[47] = 0;
   out_6178052989586726642[48] = 0;
   out_6178052989586726642[49] = 0;
   out_6178052989586726642[50] = 0;
   out_6178052989586726642[51] = 0;
   out_6178052989586726642[52] = 0;
   out_6178052989586726642[53] = 1;
   out_6178052989586726642[54] = 0;
   out_6178052989586726642[55] = 0;
   out_6178052989586726642[56] = 0;
   out_6178052989586726642[57] = 0;
   out_6178052989586726642[58] = 0;
   out_6178052989586726642[59] = 0;
   out_6178052989586726642[60] = 0;
   out_6178052989586726642[61] = 0;
   out_6178052989586726642[62] = 0;
   out_6178052989586726642[63] = 0;
   out_6178052989586726642[64] = 0;
   out_6178052989586726642[65] = 0;
}
void h_32(double *state, double *unused, double *out_7691855483359838423) {
   out_7691855483359838423[0] = state[3];
   out_7691855483359838423[1] = state[4];
   out_7691855483359838423[2] = state[5];
   out_7691855483359838423[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4597277548981993471) {
   out_4597277548981993471[0] = 0;
   out_4597277548981993471[1] = 0;
   out_4597277548981993471[2] = 0;
   out_4597277548981993471[3] = 1;
   out_4597277548981993471[4] = 0;
   out_4597277548981993471[5] = 0;
   out_4597277548981993471[6] = 0;
   out_4597277548981993471[7] = 0;
   out_4597277548981993471[8] = 0;
   out_4597277548981993471[9] = 0;
   out_4597277548981993471[10] = 0;
   out_4597277548981993471[11] = 0;
   out_4597277548981993471[12] = 0;
   out_4597277548981993471[13] = 0;
   out_4597277548981993471[14] = 0;
   out_4597277548981993471[15] = 0;
   out_4597277548981993471[16] = 0;
   out_4597277548981993471[17] = 0;
   out_4597277548981993471[18] = 0;
   out_4597277548981993471[19] = 0;
   out_4597277548981993471[20] = 0;
   out_4597277548981993471[21] = 0;
   out_4597277548981993471[22] = 0;
   out_4597277548981993471[23] = 0;
   out_4597277548981993471[24] = 0;
   out_4597277548981993471[25] = 0;
   out_4597277548981993471[26] = 1;
   out_4597277548981993471[27] = 0;
   out_4597277548981993471[28] = 0;
   out_4597277548981993471[29] = 0;
   out_4597277548981993471[30] = 0;
   out_4597277548981993471[31] = 0;
   out_4597277548981993471[32] = 0;
   out_4597277548981993471[33] = 0;
   out_4597277548981993471[34] = 0;
   out_4597277548981993471[35] = 0;
   out_4597277548981993471[36] = 0;
   out_4597277548981993471[37] = 0;
   out_4597277548981993471[38] = 0;
   out_4597277548981993471[39] = 0;
   out_4597277548981993471[40] = 0;
   out_4597277548981993471[41] = 0;
   out_4597277548981993471[42] = 0;
   out_4597277548981993471[43] = 0;
   out_4597277548981993471[44] = 0;
   out_4597277548981993471[45] = 0;
   out_4597277548981993471[46] = 0;
   out_4597277548981993471[47] = 0;
   out_4597277548981993471[48] = 0;
   out_4597277548981993471[49] = 1;
   out_4597277548981993471[50] = 0;
   out_4597277548981993471[51] = 0;
   out_4597277548981993471[52] = 0;
   out_4597277548981993471[53] = 0;
   out_4597277548981993471[54] = 0;
   out_4597277548981993471[55] = 0;
   out_4597277548981993471[56] = 0;
   out_4597277548981993471[57] = 0;
   out_4597277548981993471[58] = 0;
   out_4597277548981993471[59] = 0;
   out_4597277548981993471[60] = 0;
   out_4597277548981993471[61] = 0;
   out_4597277548981993471[62] = 0;
   out_4597277548981993471[63] = 0;
   out_4597277548981993471[64] = 0;
   out_4597277548981993471[65] = 0;
   out_4597277548981993471[66] = 0;
   out_4597277548981993471[67] = 0;
   out_4597277548981993471[68] = 0;
   out_4597277548981993471[69] = 0;
   out_4597277548981993471[70] = 0;
   out_4597277548981993471[71] = 0;
   out_4597277548981993471[72] = 1;
   out_4597277548981993471[73] = 0;
   out_4597277548981993471[74] = 0;
   out_4597277548981993471[75] = 0;
   out_4597277548981993471[76] = 0;
   out_4597277548981993471[77] = 0;
   out_4597277548981993471[78] = 0;
   out_4597277548981993471[79] = 0;
   out_4597277548981993471[80] = 0;
   out_4597277548981993471[81] = 0;
   out_4597277548981993471[82] = 0;
   out_4597277548981993471[83] = 0;
   out_4597277548981993471[84] = 0;
   out_4597277548981993471[85] = 0;
   out_4597277548981993471[86] = 0;
   out_4597277548981993471[87] = 0;
}
void h_13(double *state, double *unused, double *out_6574883009380718746) {
   out_6574883009380718746[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6574883009380718746[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6574883009380718746[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5933706523911350354) {
   out_5933706523911350354[0] = 0;
   out_5933706523911350354[1] = 0;
   out_5933706523911350354[2] = 0;
   out_5933706523911350354[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5933706523911350354[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5933706523911350354[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5933706523911350354[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5933706523911350354[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5933706523911350354[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5933706523911350354[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5933706523911350354[10] = 0;
   out_5933706523911350354[11] = 0;
   out_5933706523911350354[12] = 0;
   out_5933706523911350354[13] = 0;
   out_5933706523911350354[14] = 0;
   out_5933706523911350354[15] = 0;
   out_5933706523911350354[16] = 0;
   out_5933706523911350354[17] = 0;
   out_5933706523911350354[18] = 0;
   out_5933706523911350354[19] = 0;
   out_5933706523911350354[20] = 0;
   out_5933706523911350354[21] = 0;
   out_5933706523911350354[22] = 0;
   out_5933706523911350354[23] = 0;
   out_5933706523911350354[24] = 0;
   out_5933706523911350354[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5933706523911350354[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5933706523911350354[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5933706523911350354[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5933706523911350354[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5933706523911350354[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5933706523911350354[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5933706523911350354[32] = 0;
   out_5933706523911350354[33] = 0;
   out_5933706523911350354[34] = 0;
   out_5933706523911350354[35] = 0;
   out_5933706523911350354[36] = 0;
   out_5933706523911350354[37] = 0;
   out_5933706523911350354[38] = 0;
   out_5933706523911350354[39] = 0;
   out_5933706523911350354[40] = 0;
   out_5933706523911350354[41] = 0;
   out_5933706523911350354[42] = 0;
   out_5933706523911350354[43] = 0;
   out_5933706523911350354[44] = 0;
   out_5933706523911350354[45] = 0;
   out_5933706523911350354[46] = 0;
   out_5933706523911350354[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5933706523911350354[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5933706523911350354[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5933706523911350354[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5933706523911350354[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5933706523911350354[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5933706523911350354[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5933706523911350354[54] = 0;
   out_5933706523911350354[55] = 0;
   out_5933706523911350354[56] = 0;
   out_5933706523911350354[57] = 0;
   out_5933706523911350354[58] = 0;
   out_5933706523911350354[59] = 0;
   out_5933706523911350354[60] = 0;
   out_5933706523911350354[61] = 0;
   out_5933706523911350354[62] = 0;
   out_5933706523911350354[63] = 0;
   out_5933706523911350354[64] = 0;
   out_5933706523911350354[65] = 0;
}
void h_14(double *state, double *unused, double *out_4657013390034409161) {
   out_4657013390034409161[0] = state[10];
   out_4657013390034409161[1] = state[11];
   out_4657013390034409161[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8348134206230984880) {
   out_8348134206230984880[0] = 0;
   out_8348134206230984880[1] = 0;
   out_8348134206230984880[2] = 0;
   out_8348134206230984880[3] = 0;
   out_8348134206230984880[4] = 0;
   out_8348134206230984880[5] = 0;
   out_8348134206230984880[6] = 0;
   out_8348134206230984880[7] = 0;
   out_8348134206230984880[8] = 0;
   out_8348134206230984880[9] = 0;
   out_8348134206230984880[10] = 1;
   out_8348134206230984880[11] = 0;
   out_8348134206230984880[12] = 0;
   out_8348134206230984880[13] = 0;
   out_8348134206230984880[14] = 0;
   out_8348134206230984880[15] = 0;
   out_8348134206230984880[16] = 0;
   out_8348134206230984880[17] = 0;
   out_8348134206230984880[18] = 0;
   out_8348134206230984880[19] = 0;
   out_8348134206230984880[20] = 0;
   out_8348134206230984880[21] = 0;
   out_8348134206230984880[22] = 0;
   out_8348134206230984880[23] = 0;
   out_8348134206230984880[24] = 0;
   out_8348134206230984880[25] = 0;
   out_8348134206230984880[26] = 0;
   out_8348134206230984880[27] = 0;
   out_8348134206230984880[28] = 0;
   out_8348134206230984880[29] = 0;
   out_8348134206230984880[30] = 0;
   out_8348134206230984880[31] = 0;
   out_8348134206230984880[32] = 0;
   out_8348134206230984880[33] = 1;
   out_8348134206230984880[34] = 0;
   out_8348134206230984880[35] = 0;
   out_8348134206230984880[36] = 0;
   out_8348134206230984880[37] = 0;
   out_8348134206230984880[38] = 0;
   out_8348134206230984880[39] = 0;
   out_8348134206230984880[40] = 0;
   out_8348134206230984880[41] = 0;
   out_8348134206230984880[42] = 0;
   out_8348134206230984880[43] = 0;
   out_8348134206230984880[44] = 0;
   out_8348134206230984880[45] = 0;
   out_8348134206230984880[46] = 0;
   out_8348134206230984880[47] = 0;
   out_8348134206230984880[48] = 0;
   out_8348134206230984880[49] = 0;
   out_8348134206230984880[50] = 0;
   out_8348134206230984880[51] = 0;
   out_8348134206230984880[52] = 0;
   out_8348134206230984880[53] = 0;
   out_8348134206230984880[54] = 0;
   out_8348134206230984880[55] = 0;
   out_8348134206230984880[56] = 1;
   out_8348134206230984880[57] = 0;
   out_8348134206230984880[58] = 0;
   out_8348134206230984880[59] = 0;
   out_8348134206230984880[60] = 0;
   out_8348134206230984880[61] = 0;
   out_8348134206230984880[62] = 0;
   out_8348134206230984880[63] = 0;
   out_8348134206230984880[64] = 0;
   out_8348134206230984880[65] = 0;
}
void h_33(double *state, double *unused, double *out_8108416934746195994) {
   out_8108416934746195994[0] = state[16];
   out_8108416934746195994[1] = state[17];
   out_8108416934746195994[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9118134079483967370) {
   out_9118134079483967370[0] = 0;
   out_9118134079483967370[1] = 0;
   out_9118134079483967370[2] = 0;
   out_9118134079483967370[3] = 0;
   out_9118134079483967370[4] = 0;
   out_9118134079483967370[5] = 0;
   out_9118134079483967370[6] = 0;
   out_9118134079483967370[7] = 0;
   out_9118134079483967370[8] = 0;
   out_9118134079483967370[9] = 0;
   out_9118134079483967370[10] = 0;
   out_9118134079483967370[11] = 0;
   out_9118134079483967370[12] = 0;
   out_9118134079483967370[13] = 0;
   out_9118134079483967370[14] = 0;
   out_9118134079483967370[15] = 0;
   out_9118134079483967370[16] = 1;
   out_9118134079483967370[17] = 0;
   out_9118134079483967370[18] = 0;
   out_9118134079483967370[19] = 0;
   out_9118134079483967370[20] = 0;
   out_9118134079483967370[21] = 0;
   out_9118134079483967370[22] = 0;
   out_9118134079483967370[23] = 0;
   out_9118134079483967370[24] = 0;
   out_9118134079483967370[25] = 0;
   out_9118134079483967370[26] = 0;
   out_9118134079483967370[27] = 0;
   out_9118134079483967370[28] = 0;
   out_9118134079483967370[29] = 0;
   out_9118134079483967370[30] = 0;
   out_9118134079483967370[31] = 0;
   out_9118134079483967370[32] = 0;
   out_9118134079483967370[33] = 0;
   out_9118134079483967370[34] = 0;
   out_9118134079483967370[35] = 0;
   out_9118134079483967370[36] = 0;
   out_9118134079483967370[37] = 0;
   out_9118134079483967370[38] = 0;
   out_9118134079483967370[39] = 1;
   out_9118134079483967370[40] = 0;
   out_9118134079483967370[41] = 0;
   out_9118134079483967370[42] = 0;
   out_9118134079483967370[43] = 0;
   out_9118134079483967370[44] = 0;
   out_9118134079483967370[45] = 0;
   out_9118134079483967370[46] = 0;
   out_9118134079483967370[47] = 0;
   out_9118134079483967370[48] = 0;
   out_9118134079483967370[49] = 0;
   out_9118134079483967370[50] = 0;
   out_9118134079483967370[51] = 0;
   out_9118134079483967370[52] = 0;
   out_9118134079483967370[53] = 0;
   out_9118134079483967370[54] = 0;
   out_9118134079483967370[55] = 0;
   out_9118134079483967370[56] = 0;
   out_9118134079483967370[57] = 0;
   out_9118134079483967370[58] = 0;
   out_9118134079483967370[59] = 0;
   out_9118134079483967370[60] = 0;
   out_9118134079483967370[61] = 0;
   out_9118134079483967370[62] = 1;
   out_9118134079483967370[63] = 0;
   out_9118134079483967370[64] = 0;
   out_9118134079483967370[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1005564015022223644) {
  H(in_vec, out_1005564015022223644);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7139359416976386283) {
  err_fun(nom_x, delta_x, out_7139359416976386283);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3528438406138962813) {
  inv_err_fun(nom_x, true_x, out_3528438406138962813);
}
void live_H_mod_fun(double *state, double *out_857020396668958774) {
  H_mod_fun(state, out_857020396668958774);
}
void live_f_fun(double *state, double dt, double *out_8594626317175388658) {
  f_fun(state,  dt, out_8594626317175388658);
}
void live_F_fun(double *state, double dt, double *out_2686999570181155255) {
  F_fun(state,  dt, out_2686999570181155255);
}
void live_h_4(double *state, double *unused, double *out_1981103364723989574) {
  h_4(state, unused, out_1981103364723989574);
}
void live_H_4(double *state, double *unused, double *out_2811390932214119266) {
  H_4(state, unused, out_2811390932214119266);
}
void live_h_9(double *state, double *unused, double *out_4657013390034409161) {
  h_9(state, unused, out_4657013390034409161);
}
void live_H_9(double *state, double *unused, double *out_8348134206230984880) {
  H_9(state, unused, out_8348134206230984880);
}
void live_h_10(double *state, double *unused, double *out_2164776807616556046) {
  h_10(state, unused, out_2164776807616556046);
}
void live_H_10(double *state, double *unused, double *out_244317375542918480) {
  H_10(state, unused, out_244317375542918480);
}
void live_h_12(double *state, double *unused, double *out_6579105792362423226) {
  h_12(state, unused, out_6579105792362423226);
}
void live_H_12(double *state, double *unused, double *out_7830847340246081061) {
  H_12(state, unused, out_7830847340246081061);
}
void live_h_31(double *state, double *unused, double *out_3986579323893169117) {
  h_31(state, unused, out_3986579323893169117);
}
void live_H_31(double *state, double *unused, double *out_6178052989586726642) {
  H_31(state, unused, out_6178052989586726642);
}
void live_h_32(double *state, double *unused, double *out_7691855483359838423) {
  h_32(state, unused, out_7691855483359838423);
}
void live_H_32(double *state, double *unused, double *out_4597277548981993471) {
  H_32(state, unused, out_4597277548981993471);
}
void live_h_13(double *state, double *unused, double *out_6574883009380718746) {
  h_13(state, unused, out_6574883009380718746);
}
void live_H_13(double *state, double *unused, double *out_5933706523911350354) {
  H_13(state, unused, out_5933706523911350354);
}
void live_h_14(double *state, double *unused, double *out_4657013390034409161) {
  h_14(state, unused, out_4657013390034409161);
}
void live_H_14(double *state, double *unused, double *out_8348134206230984880) {
  H_14(state, unused, out_8348134206230984880);
}
void live_h_33(double *state, double *unused, double *out_8108416934746195994) {
  h_33(state, unused, out_8108416934746195994);
}
void live_H_33(double *state, double *unused, double *out_9118134079483967370) {
  H_33(state, unused, out_9118134079483967370);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
